{
  "openapi": "3.1.0",
  "info": {
    "title": "Cleanlight Backend API",
    "version": "1.0",
    "description": "Full backend schema. All CRUD operations go through /query, examples available via /hint. Used for documentation and backend introspection."
  },
  "servers": [
    { "url": "https://cleanlight-backend.onrender.com" }
  ],
  "paths": {
    "/query": {
      "post": {
        "operationId": "query",
        "summary": "Unified CRUD gate",
        "description": "Perform read/write/update/delete against docs, chunks, graph, and edges.",
        "x-openai-isConsequential": false,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["read_all", "read_row", "write", "update", "delete", "query"]
                  },
                  "table": {
                    "type": "string",
                    "enum": ["docs", "chunks", "graph", "edges"]
                  },
                  "rid": {
                    "type": "string",
                    "description": "Always use 'id'; backend rewrites to correct schema keys"
                  },
                  "select": { "type": "string" },
                  "filters": { "type": "object" },
                  "payload": { "type": "object" },
                  "stream": { "type": "boolean" },
                  "limit": { "type": "integer" }
                },
                "required": ["action", "table"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wrapped response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {},
                    "echo": { "type": "object" },
                    "hint": { "type": "string" },
                    "error": { "type": "object" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hint": {
      "post": {
        "operationId": "hint",
        "summary": "Get usage examples for any action",
        "description": "Returns example request bodies and notes for a given action (or all actions).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["read_all", "read_row", "write", "update", "delete", "query", "all"]
                  }
                },
                "example": { "action": "query" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hints returned",
            "content": {
              "application/json": {
                "schema": { "type": "object" }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "health",
        "summary": "Health check",
        "description": "Liveness probe with current UTC time.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "time": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
